
name: TestDistribution
## 워크플로 설명문을 참고하시오

# 트리거 ('테스트_배포' 라벨이 이슈에 라벨링 되는 시점)
on:
  issues:
    types:
      - labeled
    labels:
      - '테스트_배포'

jobs:
  # 첫번째 작업 이슈내 입력값 테스터, 출시노트 긁어오는 작업
  ReleaseNoteInputByIssue:
    runs-on: ubuntu-latest
    outputs:
      tester_group: ${{ steps.get_tester_group.outputs.tester_group }}
      release_note: ${{ steps.get_release_note.outputs.release_note }}
    steps:
      # 이슈의 본문자체를 끌어오는 작업
      - name: GetWholeIssueString
        id: get_whole_issue
        run: |
          WHOLE_ISSUE=$(jq -r '.issue.body' < $GITHUB_EVENT_PATH)
          echo "::set-output name=whole_issue::$WHOLE_ISSUE"
          printf "WHOLE_ISSUE 내용:\n%s\n" "$WHOLE_ISSUE"
        # 설명: jq -> 제이슨을 다루는 명령어도구 제이슨 스트림을 다룰수 있음 $GITHUB_EVENT_PATH 에 제이슨 형태로 해당 이벤트의 정보가 담겨서 넘어옴 그래서 추출해서 raw data 형태로(-r 옵션)을 통해 본문 추출)

      # 그룹 뽑아내는 작업
      - name: GetTesterGroup
        id: get_tester_group
        run: |
          TESTER_GROUP=$(echo "${{ steps.get_whole_issue.outputs.whole_issue }}" | sed -n 's/^- *테스터:[[:space:]]*\(.*\)[[:space:]]*$/\1/p')
          echo "::set-output name=tester_group::$TESTER_GROUP"
          echo "TESTER_GROUP 내용: $TESTER_GROUP"
        # 설명 sed -> 유닉스 계통의 텍스트 파일 조작도구(텍스트 변환용) 휴먼에러 제거를 위해 앞뒤 테스터 뒤 텍스트 앞뒤 공백 제거하는 코드 추가

      # 출시노트 뽑아내는 작업
      - name: GetReleaseNote
        id: get_release_note
        run: |
          printf "WHOLE_ISSUE 내용:\n%s\n" "${{ steps.get_whole_issue.outputs.whole_issue }}"
          printf "###########################"
          echo "${{ steps.get_whole_issue.outputs.whole_issue }}"
          RELEASE_NOTE=$(echo "${{ steps.get_whole_issue.outputs.whole_issue }}" | awk '/^+++++/ {flag=!flag; next} flag')
          echo "::set-output name=release_note::$RELEASE_NOTE"
          printf "RELEASE_NOTE 내용:\n%s\n" "$RELEASE_NOTE"
        # 설명 출시노트 이슈 템플릿의 +++++ 사이 텍스트를 추출하여 반환


  # 두번째 작업 안드로이드 AAB 빌드하는 작업
  BuildAAB:
    runs-on: ubuntu-latest
    needs: ReleaseNoteInputByIssue
    steps:
      - name: checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'zulu'
          cache: gradle

      - name: grant execute permission for gradlew
        run: chmod +x gradlew

      # gradle 관련 숨김파일 생성 step 추가 필요

      # 회사 코드에 적용시에는 수정 필요 flovor 관련
      - name: Build Android AAB
        run: ./gradlew bundleDebug

      - name: Upload AAB as artifact
        uses: actions/upload-artifact@v3
        with:
          name: aabFile
          path: app/build/outputs/bundle/debug/app-debug.aab

  # 세번째 작업 배포 및 슬랙 알림 메시지
  DistrubutionByFirebaseAppTester:
    runs-on: ubuntu-latest
    needs:
      - ReleaseNoteInputByIssue
      - BuildAAB
    if: ${{ needs.BuildAAB.result == 'success' }}
    steps:
      - name: Download AAB artifact
        uses: actions/download-artifact@v3
        with:
          name: aabFile
          path: app/build/outputs/bundle/debug

      - name: Upload to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: ${{ needs.ReleaseNoteInputByIssue.outputs.tester_group }}
          file: app/build/outputs/bundle/debug/app-debug.aab
          releaseNotes: ${{ needs.ReleaseNoteInputByIssue.outputs.release_note }}










